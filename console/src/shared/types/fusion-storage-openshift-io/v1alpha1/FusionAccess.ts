/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * FusionAccess is the Schema for the fusionaccesses API
 */
export interface FusionAccess {
  /**
   * APIVersion defines the versioned schema of this representation of an object.
   * Servers should convert recognized schemas to the latest internal value, and
   * may reject unrecognized values.
   * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  apiVersion?: string;
  /**
   * Kind is a string value representing the REST resource this object represents.
   * Servers may infer this from the endpoint the client submits requests to.
   * Cannot be updated.
   * In CamelCase.
   * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  kind?: string;
  metadata?: {};
  /**
   * FusionAccessSpec defines the desired state of FusionAccess
   */
  spec?: {
    externalManifestURL?: string;
    storageDeviceDiscovery?: {
      create?: boolean;
    };
    /**
     * Version of IBM Fusion installation manifest
     */
    storageScaleVersion?: "v5.2.3.5-2025.10.20.22.23.42";
  };
  /**
   * FusionAccessStatus defines the observed state of FusionAccess
   */
  status?: {
    /**
     * INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
     * Important: Run "make" to regenerate code after modifying this file
     * Conditions is a list of conditions and their status.
     */
    conditions?: {
      /**
       * lastTransitionTime is the last time the condition transitioned from one status to another.
       * This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
       */
      lastTransitionTime: string;
      /**
       * message is a human readable message indicating details about the transition.
       * This may be an empty string.
       */
      message: string;
      /**
       * observedGeneration represents the .metadata.generation that the condition was set based upon.
       * For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
       * with respect to the current state of the instance.
       */
      observedGeneration?: number;
      /**
       * reason contains a programmatic identifier indicating the reason for the condition's last transition.
       * Producers of specific condition types may define expected values and meanings for this field,
       * and whether the values are considered a guaranteed API.
       * The value should be a CamelCase string.
       * This field may not be empty.
       */
      reason: string;
      /**
       * status of the condition, one of True, False, Unknown.
       */
      status: "True" | "False" | "Unknown";
      /**
       * type of condition in CamelCase or in foo.example.com/CamelCase.
       */
      type: string;
    }[];
    /**
     * observedGeneration is the last generation change the operator has dealt with
     */
    observedGeneration?: number;
    /**
     * Show the general status of the fusion access object (this can be shown nicely on ocp console UI)
     */
    status?: string;
    /**
     * TotalProvisionedDeviceCount is the count of the total devices over which the PVs has been provisioned
     */
    totalProvisionedDeviceCount?: number;
  };
}
